services:
  gateway:
    build:
      context: gateway
      dockerfile: ./Dockerfile
    env_file:
      - gateway/.env
    container_name: gateway
    command: sh -c "uvicorn main:app --reload --host 0.0.0.0"
    ports:
      - '9999:8000'
    networks:
      - default
    depends_on:
      - 'auth'
      - 'license'

  auth:
    build:
      context: auth
      dockerfile: ./Dockerfile
    env_file:
      - auth/.env
    container_name: authentication_service
    command: sh -c "alembic upgrade head && uvicorn main:app --reload --host 0.0.0.0 "
    networks:
      - default
    depends_on:
      - users_db
    ports:
      - '8030:8000'
    volumes:
      - ./logs:/auth/logs

  users_db:
    image: postgres:15
    container_name: users_db
    ports:
      - '5432:5432'
    networks:
      - default
    env_file:
      - auth/.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    volumes:
      - users_data:/var/lib/postgresql/data

  license:
    build:
      context: license
      dockerfile: ./Dockerfile
    env_file:
      - license/.env
    container_name: license_service
    command: sh -c "alembic upgrade head && uvicorn main:app --reload --host 0.0.0.0"
    networks:
      - default
    depends_on:
      - license_db
    ports:
      - '8060:8000'
    volumes:
      - ./logs:/license/logs

  license_db:
    image: postgres:15
    container_name: license_db
    ports:
      - '5433:5432'
    networks:
      - default
    env_file:
      - license/.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
      # - PGPORT=${DB_PORT}
    volumes:
      - licenses_data:/var/lib/postgresql/data

volumes:
  users_data:
  licenses_data:

networks:
  default:
    name: adv_license
